// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	book_model "github.com/fikrirnurhidayat/booksvc/internal/book/domain/model"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// UpdateBookService is an autogenerated mock type for the UpdateBookService type
type UpdateBookService struct {
	mock.Mock
}

// Call provides a mock function with given fields: ctx, book
func (_m *UpdateBookService) Call(ctx context.Context, book book_model.Book) (book_model.Book, error) {
	ret := _m.Called(ctx, book)

	var r0 book_model.Book
	if rf, ok := ret.Get(0).(func(context.Context, book_model.Book) book_model.Book); ok {
		r0 = rf(ctx, book)
	} else {
		r0 = ret.Get(0).(book_model.Book)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, book_model.Book) error); ok {
		r1 = rf(ctx, book)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUpdateBookService interface {
	mock.TestingT
	Cleanup(func())
}

// NewUpdateBookService creates a new instance of UpdateBookService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUpdateBookService(t mockConstructorTestingTNewUpdateBookService) *UpdateBookService {
	mock := &UpdateBookService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
